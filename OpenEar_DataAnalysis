import pandas as pd
import scipy.stats as stats
import numpy as np

fileName1 = 'E:/A_TCD/X_Thesis/Data/Sujay OpenSMILE Analysis/David Cameron Emergency.csv'
#input("Enter the file path of Emergency Data : ")
fileName2 =  'E:/A_TCD/X_Thesis/Data/Sujay OpenSMILE Analysis/David Cameron Non Emergency.csv'


# ------ Load to data Frame -------
Emergency = pd.read_csv(fileName1, delimiter = ',')
NonEmergency = pd.read_csv(fileName2, delimiter = ',')
Emergencydf = Emergency[['Joy','Anger','Sad','Disgust', 'Fear']].astype(float)
nonEmergencydf = NonEmergency[['Joy','Anger','Sad','Disgust', 'Fear']].astype(float)

#Emergency.head()
#NonEmergency.head()

# ---- Emergency Data ----
Accept = []
SignalNoiceRatio = []
Uncertanity = []

Reject = Emergencydf[nonEmergencydf < 0.49].count()
Equiprobable = Emergencydf[(Emergencydf > 0.499999) & (Emergencydf <= 0.500000)].count()
Accept1 = Emergencydf[(Emergencydf > 0.500000) & (Emergencydf < 0.655555)].count()
Accept10 = Emergencydf[(Emergencydf > 0.655555) & (Emergencydf < 0.800000)].count()
Accept100 = Emergencydf[(Emergencydf > 0.800000) & (Emergencydf < 0.900000)].count()
Accept1000 = Emergencydf[(Emergencydf > 0.900000)].count()
AcceptTotal = (Accept1 + Accept10 + Accept100 + Accept1000)

SignalNoiceRatio.append(Reject / Emergencydf.count())
Uncertanity.append(Equiprobable / Emergencydf.count())
Accept = ( AcceptTotal/ Emergencydf.count())

print(Accept)
#print(type(Accept))


# ---- Non Emergency----
nAccept = []
nSignalNoiceRatio = []
nUncertanity = []

nReject = nonEmergencydf[nonEmergencydf < 0.499999].count()
nEquiprobable = nonEmergencydf[(nonEmergencydf > 0.499999) & (nonEmergencydf <= 0.500000)].count()
nAccept1 = nonEmergencydf[(nonEmergencydf > 0.500000) & (nonEmergencydf < 0.655555)].count()
nAccept10 = nonEmergencydf[(nonEmergencydf > 0.655555) & (nonEmergencydf < 0.800000)].count()
nAccept100 = nonEmergencydf[(nonEmergencydf > 0.800000) & (nonEmergencydf < 0.900000)].count()
nAccept1000 = nonEmergencydf[(nonEmergencydf > 0.900000)].count()
nAcceptTotal = (nAccept1 + nAccept10 + nAccept100 + nAccept1000)

nSignalNoiceRatio.append(nReject / nonEmergencydf.count())
nUncertanity.append(nEquiprobable / nonEmergencydf.count())
nAccept = ( nAcceptTotal/ nonEmergencydf.count())

print(nAccept)

a = Accept.values[2:3]
b = nAccept.values[2:3]

chiStatisticsAccept = (stats.chisquare(a,b))
chiStatisticsEqui = (stats.chisquare(np.transpose(SignalNoiceRatio), np.transpose(nSignalNoiceRatio)))

print('-------------------------------------------------------------------------------------')
print('T test values for Acceptance ',chiStatisticsAccept)
print('-------------------------------------------------------------------------------------')
print('T test values for Equiprobable ',chiStatisticsEqui)
print('--------------------------------------------------------------------------------------')
